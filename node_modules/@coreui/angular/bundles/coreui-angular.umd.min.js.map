{"version":3,"sources":["ng://@coreui/angular/lib/shared/classes.ts","ng://@coreui/angular/lib/shared/toggle-classes.ts","ng://@coreui/angular/lib/shared/layout/layout.directive.ts","ng://@coreui/angular/lib/shared/layout/layout.module.ts","ng://@coreui/angular/lib/shared/replace.ts","ng://@coreui/angular/lib/aside/app-aside.component.ts","ng://@coreui/angular/lib/aside/app-aside.module.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.service.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.component.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.module.ts","ng://@coreui/angular/lib/footer/app-footer.component.ts","ng://@coreui/angular/lib/footer/app-footer.module.ts","ng://@coreui/angular/lib/header/app-header.component.ts","ng://@coreui/angular/lib/header/app-header.module.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-footer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-form.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-header.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-minimizer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-nav.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.module.ts"],"names":["sidebarCssClasses","asideMenuCssClasses","ToggleClasses","Toggle","ClassNames","Level","indexOf","NewClassNames","slice","map","Class","document","querySelector","classList","contains","remove","add","SidebarToggleDirective","prototype","ngOnInit","this","bp","breakpoint","toggleOpen","$event","cssClass","preventDefault","Directive","args","selector","Input","HostListener","SidebarMinimizeDirective","toggle","MobileSidebarToggleDirective","hasClass","target","elementClassName","RegExp","test","className","SidebarOffCanvasCloseDirective","toggleClass","elem","newClass","replace","BrandMinimizeDirective","AsideToggleDirective","LayoutModule","NgModule","imports","CommonModule","exports","declarations","Replace","el","nativeElement","parentElement","firstChild","insertBefore","removeChild","AppAsideComponent","isFixed","fixed","displayBreakpoint","display","isOffCanvas","offCanvas","Component","template","ElementRef","AppAsideModule","AppBreadcrumbService","router","route","_this","_breadcrumbs","BehaviorSubject","Array","breadcrumbs","asObservable","events","pipe","filter","event","NavigationEnd","subscribe","currentRoute","root","url","childrenRoutes","children","forEach","outlet","routeSnapshot","snapshot","segment","path","join","push","label","data","next","Object","assign","Injectable","Router","ActivatedRoute","AppBreadcrumbComponent","service","AppBreadcrumbModule","forRoot","config","ngModule","providers","RouterModule","AppFooterComponent","AppFooterModule","AppHeaderComponent","imgSrc","brand","src","imgWidth","width","imgHeight","height","imgAlt","alt","console","log","AppHeaderModule","AppSidebarFooterComponent","AppSidebarFormComponent","AppSidebarHeaderComponent","AppSidebarMinimizerComponent","AppSidebarComponent","isCompact","compact","isMinimized","minimized","fixedPosition","HostBinding","NavDropdownDirective","NavDropdownToggleDirective","dropdown","AppSidebarNavComponent","isDivider","item","divider","isTitle","title","AppSidebarNavItemComponent","class","isDropdown","thisUrl","isActive","AppSidebarNavLinkComponent","hasVariant","link","variant","isBadge","badge","isExternalLink","substring","isIcon","icon","hideMobile","body","AppSidebarNavDropdownComponent","styles","AppSidebarNavTitleComponent","renderer","li","createElement","name","createText","addClass","classes","wrapper","element","appendChild","Renderer2","AppSidebarModule"],"mappings":"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","sourcesContent":["export const sidebarCssClasses: Array<string> = [\n  'sidebar-show',\n  'sidebar-sm-show',\n  'sidebar-md-show',\n  'sidebar-lg-show',\n  'sidebar-xl-show'\n];\n\nexport const asideMenuCssClasses: Array<string> = [\n  'aside-menu-show',\n  'aside-menu-sm-show',\n  'aside-menu-md-show',\n  'aside-menu-lg-show',\n  'aside-menu-xl-show'\n];\n","const RemoveClasses = (NewClassNames) => {\n  const MatchClasses = NewClassNames.map((Class) => document.querySelector('body').classList.contains(Class));\n  return MatchClasses.indexOf(true) !== -1;\n};\n\nexport const ToggleClasses = (Toggle, ClassNames) => {\n  const Level = ClassNames.indexOf(Toggle);\n  const NewClassNames = ClassNames.slice(0, Level + 1);\n\n  if (RemoveClasses(NewClassNames)) {\n    NewClassNames.map((Class) => document.querySelector('body').classList.remove(Class));\n  } else {\n    document.querySelector('body').classList.add(Toggle);\n  }\n};\n","import { Directive, HostListener, Input, ElementRef, OnInit } from '@angular/core';\nimport { sidebarCssClasses, asideMenuCssClasses } from './../classes';\nimport { ToggleClasses } from './../toggle-classes';\n\n/**\n* Allows the sidebar to be toggled via click.\n*/\n@Directive({\n  selector: '[appSidebarToggler]'\n})\nexport class SidebarToggleDirective implements OnInit {\n  @Input('appSidebarToggler') breakpoint: string;\n  public bp;\n  constructor() {}\n  ngOnInit(): void {\n    this.bp = this.breakpoint;\n  }\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    let cssClass;\n    this.bp ? cssClass = `sidebar-${this.bp}-show` : cssClass = sidebarCssClasses[0];\n    ToggleClasses(cssClass, sidebarCssClasses);\n  }\n}\n\n@Directive({\n  selector: '[appSidebarMinimizer]'\n})\nexport class SidebarMinimizeDirective {\n  constructor() { }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    document.querySelector('body').classList.toggle('sidebar-minimized');\n  }\n}\n\n@Directive({\n  selector: '[appMobileSidebarToggler]'\n})\nexport class MobileSidebarToggleDirective {\n  constructor() { }\n\n  // Check if element has class\n  private hasClass(target: any, elementClassName: string) {\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\n  }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    document.querySelector('body').classList.toggle('sidebar-mobile-show');\n  }\n}\n\n/**\n* Allows the off-canvas sidebar to be closed via click.\n*/\n@Directive({\n  selector: '[appSidebarClose]'\n})\nexport class SidebarOffCanvasCloseDirective {\n  constructor() { }\n\n  // Check if element has class\n  private hasClass(target: any, elementClassName: string) {\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\n  }\n\n  // Toggle element class\n  private toggleClass(elem: any, elementClassName: string) {\n    let newClass = ' ' + elem.className.replace( /[\\t\\r\\n]/g, ' ' ) + ' ';\n    if (this.hasClass(elem, elementClassName)) {\n      while (newClass.indexOf(' ' + elementClassName + ' ') >= 0 ) {\n        newClass = newClass.replace( ' ' + elementClassName + ' ' , ' ' );\n      }\n      elem.className = newClass.replace(/^\\s+|\\s+$/g, '');\n    } else {\n      elem.className += ' ' + elementClassName;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n\n    if (this.hasClass(document.querySelector('body'), 'sidebar-off-canvas')) {\n      this.toggleClass(document.querySelector('body'), 'sidebar-opened');\n    }\n  }\n}\n\n@Directive({\n  selector: '[appBrandMinimizer]'\n})\nexport class BrandMinimizeDirective {\n  constructor() { }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    document.querySelector('body').classList.toggle('brand-minimized');\n  }\n}\n\n\n/**\n* Allows the aside to be toggled via click.\n*/\n@Directive({\n  selector: '[appAsideMenuToggler]',\n})\nexport class AsideToggleDirective implements OnInit {\n  @Input('appAsideMenuToggler') breakpoint: string;\n  public bp;\n  constructor() {}\n  ngOnInit(): void {\n    this.bp = this.breakpoint;\n  }\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    let cssClass;\n    this.bp ? cssClass = `aside-menu-${this.bp}-show` : cssClass = asideMenuCssClasses[0];\n    ToggleClasses(cssClass, asideMenuCssClasses);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule} from '@angular/core';\nimport {\n  AsideToggleDirective,\n  BrandMinimizeDirective,\n  MobileSidebarToggleDirective,\n  SidebarToggleDirective,\n  SidebarMinimizeDirective,\n  SidebarOffCanvasCloseDirective\n} from './layout.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AsideToggleDirective,\n    BrandMinimizeDirective,\n    MobileSidebarToggleDirective,\n    SidebarToggleDirective,\n    SidebarMinimizeDirective,\n    SidebarOffCanvasCloseDirective\n  ],\n  declarations: [\n    AsideToggleDirective,\n    BrandMinimizeDirective,\n    MobileSidebarToggleDirective,\n    SidebarToggleDirective,\n    SidebarMinimizeDirective,\n    SidebarOffCanvasCloseDirective\n  ]\n})\nexport class LayoutModule { }\n","export function Replace(el: any): any {\n  const nativeElement: HTMLElement = el.nativeElement;\n  const parentElement: HTMLElement = nativeElement.parentElement;\n  // move all children out of the element\n  while (nativeElement.firstChild) {\n    parentElement.insertBefore(nativeElement.firstChild, nativeElement);\n  }\n  // remove the empty element(the host)\n  parentElement.removeChild(nativeElement);\n}\n","import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { asideMenuCssClasses, Replace } from './../shared/index';\n\n@Component({\n  selector: 'app-aside',\n  template: `\n    <aside class=\"aside-menu\">\n      <ng-content></ng-content>\n    </aside>\n  `\n})\nexport class AppAsideComponent implements OnInit {\n  @Input() display: any;\n  @Input() fixed: boolean;\n  @Input() offCanvas: boolean;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    Replace(this.el);\n    this.isFixed(this.fixed);\n    this.displayBreakpoint(this.display);\n  }\n\n  isFixed(fixed: boolean): void {\n    if (this.fixed) { document.querySelector('body').classList.add('aside-menu-fixed'); }\n  }\n\n  isOffCanvas(offCanvas: boolean): void {\n    if (this.offCanvas) { document.querySelector('body').classList.add('aside-menu-off-canvas'); }\n  }\n\n  displayBreakpoint(display: any): void {\n    if (this.display !== false ) {\n      let cssClass;\n      this.display ? cssClass = `aside-menu-${this.display}-show` : cssClass = asideMenuCssClasses[0];\n      document.querySelector('body').classList.add(cssClass);\n    }\n  }\n}\n","import { CommonModule} from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LayoutModule } from './../shared/layout/layout.module';\n\nimport { AppAsideComponent } from './app-aside.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LayoutModule\n  ],\n  exports: [\n    AppAsideComponent,\n    LayoutModule\n  ],\n  declarations: [\n    AppAsideComponent\n  ]\n})\nexport class AppAsideModule {}\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs/index';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AppBreadcrumbService {\r\n\r\n  breadcrumbs: Observable<Array<Object>>;\r\n\r\n  private _breadcrumbs: BehaviorSubject<Array<Object>>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) {\r\n\r\n    this._breadcrumbs = new BehaviorSubject<Object[]>(new Array<Object>());\r\n\r\n    this.breadcrumbs = this._breadcrumbs.asObservable();\r\n\r\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event) => {\r\n      const breadcrumbs = [];\r\n      let currentRoute = this.route.root,\r\n      url = '';\r\n      do {\r\n        const childrenRoutes = currentRoute.children;\r\n        currentRoute = null;\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        childrenRoutes.forEach(route => {\r\n          if (route.outlet === 'primary') {\r\n            const routeSnapshot = route.snapshot;\r\n            url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\r\n            breadcrumbs.push({\r\n              label: route.snapshot.data,\r\n              url:   url\r\n            });\r\n            currentRoute = route;\r\n          }\r\n        });\r\n      } while (currentRoute);\r\n\r\n      this._breadcrumbs.next(Object.assign([], breadcrumbs));\r\n\r\n      return breadcrumbs;\r\n    });\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit  } from '@angular/core';\nimport { Replace } from './../shared';\nimport { AppBreadcrumbService } from './app-breadcrumb.service';\n\n@Component({\n  selector: 'app-breadcrumb',\n  template: `\n    <ng-template ngFor let-breadcrumb [ngForOf]=\"breadcrumbs | async\" let-last = last>\n      <li class=\"breadcrumb-item\"\n          *ngIf=\"breadcrumb.label.title && (breadcrumb.url.slice(-1) == '/' || last)\"\n          [ngClass]=\"{active: last}\">\n        <a *ngIf=\"!last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</a>\n        <span *ngIf=\"last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</span>\n      </li>\n    </ng-template>\n  `\n})\nexport class AppBreadcrumbComponent implements OnInit {\n  @Input() fixed: boolean;\n  public breadcrumbs;\n\n  constructor(public service: AppBreadcrumbService, public el: ElementRef) { }\n\n  public ngOnInit(): void {\n    Replace(this.el);\n    this.isFixed(this.fixed);\n    this.breadcrumbs = this.service.breadcrumbs;\n  }\n\n  isFixed(fixed: boolean): void {\n    if (this.fixed) { document.querySelector('body').classList.add('breadcrumb-fixed'); }\n  }\n}\n","import { CommonModule} from '@angular/common';\nimport { NgModule, ModuleWithProviders} from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n// App Breadcrumb Component\nimport { AppBreadcrumbService } from './app-breadcrumb.service';\nimport { AppBreadcrumbComponent } from './app-breadcrumb.component';\n\n// @dynamic\n@NgModule({\n  imports: [ CommonModule, RouterModule ],\n  exports: [ AppBreadcrumbComponent ],\n  declarations: [ AppBreadcrumbComponent ]\n})\nexport class AppBreadcrumbModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: AppBreadcrumbModule,\n      providers: [\n        AppBreadcrumbService\n      ]\n    };\n  }\n}\n","import { Component, ElementRef, Input, OnInit  } from '@angular/core';\nimport { Replace } from './../shared';\n\n@Component({\n  selector: 'app-footer',\n  template: `\n    <footer class=\"app-footer\">\n      <ng-content></ng-content>\n    </footer>\n  `\n})\nexport class AppFooterComponent implements OnInit {\n  @Input() fixed: boolean;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    Replace(this.el);\n    this.isFixed(this.fixed);\n  }\n\n  isFixed(fixed: boolean): void {\n    if (this.fixed) { document.querySelector('body').classList.add('footer-fixed'); }\n  }\n}\n","import { CommonModule} from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { AppFooterComponent } from './app-footer.component';\n\n@NgModule({\n  imports: [ CommonModule ],\n  exports: [ AppFooterComponent ],\n  declarations: [ AppFooterComponent ]\n})\nexport class AppFooterModule {}\n","import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { Replace } from './../shared';\n\n@Component({\n  selector: 'app-header',\n  template: `\n    <header class=\"app-header navbar\">\n      <ng-template [ngIf]=\"mobileSidebarToggler != false\">\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appSidebarToggler>\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n      <ng-template [ngIf]=\"navbarBrand || navbarBrandFull || navbarBrandMinimized\">\n        <a class=\"navbar-brand\" href=\"#\">\n          <img *ngIf=\"navbarBrand\"\n               [src]=\"imgSrc(navbarBrand)\"\n               [attr.width]=\"imgWidth(navbarBrand)\"\n               [attr.height]=\"imgHeight(navbarBrand)\"\n               [attr.alt]=\"imgAlt(navbarBrand)\"\n               class=\"navbar-brand\">\n          <img *ngIf=\"navbarBrandFull\"\n               [src]=\"imgSrc(navbarBrandFull)\"\n               [attr.width]=\"imgWidth(navbarBrandFull)\"\n               [attr.height]=\"imgHeight(navbarBrandFull)\"\n               [attr.alt]=\"imgAlt(navbarBrandFull)\"\n               class=\"navbar-brand-full\">\n          <img *ngIf=\"navbarBrandMinimized\"\n               [src]=\"imgSrc(navbarBrandMinimized)\"\n               [attr.width]=\"imgWidth(navbarBrandMinimized)\"\n               [attr.height]=\"imgHeight(navbarBrandMinimized)\"\n               [attr.alt]=\"imgAlt(navbarBrandMinimized)\"\n               class=\"navbar-brand-minimized\">\n        </a>\n      </ng-template>\n      <ng-template [ngIf]=\"sidebarToggler != false\">\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appSidebarToggler]=\"sidebarToggler\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n      <ng-content></ng-content>\n      <ng-template [ngIf]=\"asideMenuToggler != false\">\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appAsideMenuToggler]=\"asideMenuToggler\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n      <ng-template [ngIf]=\"mobileAsideMenuToggler != false\">\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appAsideMenuToggler>\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n    </header>\n  `\n})\nexport class AppHeaderComponent implements OnInit {\n\n  @Input() fixed: boolean;\n\n  @Input() navbarBrand: any;\n  @Input() navbarBrandFull: any;\n  @Input() navbarBrandMinimized: any;\n\n  @Input() sidebarToggler: any;\n  @Input() mobileSidebarToggler: any;\n\n  @Input() asideMenuToggler: any;\n  @Input() mobileAsideMenuToggler: any;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    Replace(this.el);\n    this.isFixed(this.fixed);\n  }\n\n  isFixed(fixed: boolean): void {\n    if (this.fixed) { document.querySelector('body').classList.add('header-fixed'); }\n  }\n\n  imgSrc(brand: any): void {\n    return brand.src ? brand.src : '';\n  }\n\n  imgWidth(brand: any): void {\n    return brand.width ? brand.width : 'auto';\n  }\n\n  imgHeight(brand: any): void {\n    return brand.height ? brand.height : 'auto';\n  }\n\n  imgAlt(brand: any): void {\n    return brand.alt ? brand.alt : '';\n  }\n\n  breakpoint(breakpoint: any): void {\n    console.log(breakpoint);\n    return breakpoint ? breakpoint : '';\n  }\n}\n","import { CommonModule} from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LayoutModule } from './../shared/layout/layout.module';\n\nimport { AppHeaderComponent } from './app-header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LayoutModule\n  ],\n  exports: [\n    AppHeaderComponent,\n    LayoutModule\n  ],\n  declarations: [\n    AppHeaderComponent\n  ]\n})\nexport class AppHeaderModule {}\n","import { Component, ElementRef, OnInit  } from '@angular/core';\nimport { Replace } from './../shared';\n\n@Component({\n  selector: 'app-sidebar-footer',\n  template: `\n    <div class=\"sidebar-footer\">\n      <ng-content></ng-content>\n    </div>`\n})\nexport class AppSidebarFooterComponent implements OnInit {\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n","import { Component, ElementRef, OnInit  } from '@angular/core';\nimport { Replace } from './../shared';\n\n@Component({\n  selector: 'app-sidebar-form',\n  template: `\n    <form class=\"sidebar-form\">\n      <ng-content></ng-content>\n    </form>\n  `\n})\nexport class AppSidebarFormComponent implements OnInit {\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n","import { Component, ElementRef, OnInit  } from '@angular/core';\nimport { Replace } from './../shared';\n\n@Component({\n  selector: 'app-sidebar-header',\n  template: `\n    <div class=\"sidebar-header\">\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class AppSidebarHeaderComponent implements OnInit {\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n","import { Component, ElementRef, OnInit  } from '@angular/core';\nimport { Replace } from './../shared';\n\n@Component({\n  selector: 'app-sidebar-minimizer',\n  template: `\n    <button class=\"sidebar-minimizer\" type=\"button\" appSidebarMinimizer appBrandMinimizer></button>\n  `\n})\nexport class AppSidebarMinimizerComponent implements OnInit {\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n","import { Component, Input, HostBinding, OnInit } from '@angular/core';\nimport { sidebarCssClasses } from './../shared';\n\n@Component({\n  selector: 'app-sidebar',\n  template: `<ng-content></ng-content>`\n})\nexport class AppSidebarComponent implements OnInit {\n  @Input() compact: boolean;\n  @Input() display: any;\n  @Input() fixed: boolean;\n  @Input() minimized: boolean;\n  @Input() offCanvas: boolean;\n\n  @HostBinding('class.sidebar') true;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.displayBreakpoint(this.display);\n    this.isCompact(this.compact);\n    this.isFixed(this.fixed);\n    this.isMinimized(this.minimized);\n    this.isOffCanvas(this.offCanvas);\n  }\n\n  isCompact(compact: boolean): void {\n    if (this.compact) { document.querySelector('body').classList.add('sidebar-compact'); }\n  }\n\n  isFixed(fixed: boolean): void {\n    if (this.fixed) { document.querySelector('body').classList.add('sidebar-fixed'); }\n  }\n\n  isMinimized(minimized: boolean): void {\n    if (this.minimized) { document.querySelector('body').classList.add('sidebar-minimized'); }\n  }\n\n  isOffCanvas(offCanvas: boolean): void {\n    if (this.offCanvas) { document.querySelector('body').classList.add('sidebar-off-canvas'); }\n  }\n\n  fixedPosition(fixed: boolean): void {\n    if (this.fixed) { document.querySelector('body').classList.add('sidebar-fixed'); }\n  }\n\n  displayBreakpoint(display: any): void {\n    if (this.display !== false ) {\n      let cssClass;\n      this.display ? cssClass = `sidebar-${this.display}-show` : cssClass = sidebarCssClasses[0];\n      document.querySelector('body').classList.add(cssClass);\n    }\n  }\n}\n","import { Component, Directive, ElementRef, HostBinding, HostListener, Input, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { Replace } from './../shared';\n\n@Directive({\n  selector: '[appNavDropdown]'\n})\nexport class NavDropdownDirective {\n\n  constructor(private el: ElementRef) { }\n\n  toggle() {\n    this.el.nativeElement.classList.toggle('open');\n  }\n}\n\n/**\n* Allows the dropdown to be toggled via click.\n*/\n@Directive({\n  selector: '[appNavDropdownToggle]'\n})\nexport class NavDropdownToggleDirective {\n  constructor(private dropdown: NavDropdownDirective) {}\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    this.dropdown.toggle();\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav',\n  template: `\n    <ul class=\"nav\">\n      <ng-template ngFor let-navitem [ngForOf]=\"navItems\">\n        <li *ngIf=\"isDivider(navitem)\" class=\"nav-divider\"></li>\n        <ng-template [ngIf]=\"isTitle(navitem)\">\n          <app-sidebar-nav-title [title]='navitem'></app-sidebar-nav-title>\n        </ng-template>\n        <ng-template [ngIf]=\"!isDivider(navitem)&&!isTitle(navitem)\">\n          <app-sidebar-nav-item [item]='navitem'></app-sidebar-nav-item>\n        </ng-template>\n      </ng-template>\n    </ul>`\n})\nexport class AppSidebarNavComponent {\n  @Input() navItems: any;\n\n  @HostBinding('class.sidebar-nav') true;\n  @HostBinding('attr.role') role = 'nav';\n\n  public isDivider(item) {\n    return item.divider ? true : false;\n  }\n\n  public isTitle(item) {\n    return item.title ? true : false;\n  }\n\n  constructor() { }\n}\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar-nav-item',\n  template: `\n    <li *ngIf=\"!isDropdown(); else dropdown\" [ngClass]=\"hasClass() ? 'nav-item ' + item.class : 'nav-item'\">\n      <app-sidebar-nav-link [link]='item'></app-sidebar-nav-link>\n    </li>\n    <ng-template #dropdown>\n      <li [ngClass]=\"hasClass() ? 'nav-item nav-dropdown ' + item.class : 'nav-item nav-dropdown'\"\n          [class.open]=\"isActive()\"\n          routerLinkActive=\"open\"\n          appNavDropdown>\n        <app-sidebar-nav-dropdown [link]='item'></app-sidebar-nav-dropdown>\n      </li>\n    </ng-template>\n    `\n})\nexport class AppSidebarNavItemComponent implements OnInit {\n  @Input() item: any;\n\n  public hasClass() {\n    return this.item.class ? true : false;\n  }\n\n  public isDropdown() {\n    return this.item.children ? true : false;\n  }\n\n  public thisUrl() {\n    return this.item.url;\n  }\n\n  public isActive() {\n    return this.router.isActive(this.thisUrl(), false);\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n\n}\n\n@Component({\n  selector: 'app-sidebar-nav-link',\n  template: `\n    <a *ngIf=\"!isExternalLink(); else external\"\n      [ngClass]=\"hasVariant() ? 'nav-link nav-link-' + link.variant : 'nav-link'\"\n      routerLinkActive=\"active\"\n      [routerLink]=\"[link.url]\"\n      (click)=\"hideMobile()\">\n      <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n      {{ link.name }}\n      <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n    </a>\n    <ng-template #external>\n      <a [ngClass]=\"hasVariant() ? 'nav-link nav-link-' + link.variant : 'nav-link'\" href=\"{{link.url}}\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n    </ng-template>\n  `\n})\nexport class AppSidebarNavLinkComponent implements OnInit {\n  @Input() link: any;\n\n  public hasVariant() {\n    return this.link.variant ? true : false;\n  }\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isExternalLink() {\n    return this.link.url.substring(0, 4) === 'http' ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  public hideMobile() {\n    if (document.body.classList.contains('sidebar-mobile-show')) {\n      document.body.classList.toggle('sidebar-mobile-show');\n    }\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-dropdown',\n  template: `\n    <a class=\"nav-link nav-dropdown-toggle\" appNavDropdownToggle>\n      <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n      {{ link.name }}\n      <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n    </a>\n    <ul class=\"nav-dropdown-items\">\n      <ng-template ngFor let-child [ngForOf]=\"link.children\">\n        <app-sidebar-nav-item [item]='child'></app-sidebar-nav-item>\n      </ng-template>\n    </ul>\n  `,\n  styles: ['.nav-dropdown-toggle { cursor: pointer; }']\n})\nexport class AppSidebarNavDropdownComponent implements OnInit {\n  @Input() link: any;\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-title',\n  template: ''\n})\nexport class AppSidebarNavTitleComponent implements OnInit {\n  @Input() title: any;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  ngOnInit() {\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    const li = this.renderer.createElement('li');\n    const name = this.renderer.createText(this.title.name);\n\n    this.renderer.addClass(li, 'nav-title');\n\n    if ( this.title.class ) {\n      const classes = this.title.class;\n      this.renderer.addClass(li, classes);\n    }\n\n    if ( this.title.wrapper ) {\n      const wrapper = this.renderer.createElement(this.title.wrapper.element);\n\n      this.renderer.appendChild(wrapper, name);\n      this.renderer.appendChild(li, wrapper);\n    } else {\n      this.renderer.appendChild(li, name);\n    }\n    this.renderer.appendChild(nativeElement, li);\n    Replace(this.el);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule} from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LayoutModule } from './../shared/layout/layout.module';\n\n// App Sidebar Component\nimport { AppSidebarFooterComponent } from './app-sidebar-footer.component';\nimport { AppSidebarFormComponent } from './app-sidebar-form.component';\nimport { AppSidebarHeaderComponent } from './app-sidebar-header.component';\nimport { AppSidebarMinimizerComponent } from './app-sidebar-minimizer.component';\nimport { AppSidebarComponent } from './app-sidebar.component';\nimport {\n  AppSidebarNavComponent,\n  AppSidebarNavDropdownComponent,\n  AppSidebarNavItemComponent,\n  AppSidebarNavLinkComponent,\n  AppSidebarNavTitleComponent,\n  NavDropdownDirective,\n  NavDropdownToggleDirective\n} from './app-sidebar-nav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    LayoutModule\n  ],\n  exports: [\n    AppSidebarFooterComponent,\n    AppSidebarFormComponent,\n    AppSidebarHeaderComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarComponent,\n    AppSidebarNavComponent,\n    AppSidebarNavDropdownComponent,\n    AppSidebarNavItemComponent,\n    AppSidebarNavLinkComponent,\n    AppSidebarNavTitleComponent,\n    NavDropdownDirective,\n    NavDropdownToggleDirective,\n    LayoutModule\n  ],\n  declarations: [\n    AppSidebarFooterComponent,\n    AppSidebarFormComponent,\n    AppSidebarHeaderComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarComponent,\n    AppSidebarNavComponent,\n    AppSidebarNavDropdownComponent,\n    AppSidebarNavItemComponent,\n    AppSidebarNavLinkComponent,\n    AppSidebarNavTitleComponent,\n    NavDropdownDirective,\n    NavDropdownToggleDirective\n  ]\n})\nexport class AppSidebarModule { }\n"]}